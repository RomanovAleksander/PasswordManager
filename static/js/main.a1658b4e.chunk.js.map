{"version":3,"sources":["actions/signin/types.js","actions/generator/types.js","actions/generator/actions.js","services/LocalStorageService.js","components/FormButton/FormButton.js","components/FormButtons/FormButtons.js","components/LoginForm/LoginForm.js","actions/signin/actions.js","components/Generator/Generator.js","utils/message.js","utils/characters.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","reducers/authorization.js","reducers/generator.js","reducers/index.js","store.js","index.js"],"names":["SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT","OPEN_GENERATOR","CLOSE_GENERATOR","openGenerator","type","closeGenerator","LocalStorage","instance","this","key","JSON","parse","localStorage","getItem","value","setItem","stringify","FormButton","selectButton","e","setState","active","target","id","props","changeButton","state","button","selectIcon","icon","name","onChange","required","className","htmlFor","onClick","React","Component","mapDispatchToProps","connect","FormButtons","handleChange","onButtonChange","buttons","map","LoginForm","password","onSubmit","preventDefault","signInRequest","signInSuccess","console","log","LocalStorageService","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","isPassword","size","autoComplete","maxLength","placeholder","readOnly","tabIndex","newestOnTop","rtl","pauseOnFocusLoss","user","payload","signInError","isAuthorized","userData","loading","useState","setPassword","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","createPassword","characterList","characterListLength","length","i","characterIndex","Math","round","random","charAt","notify","message","hasError","dark","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","defaultValue","max","min","checked","userSignOut","data-title","App","isOpen","generator","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","reducer","combineReducers","action","clear","store","createStore","composeWithDevTools","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a1658b4e.chunk.js","sourcesContent":["export const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\nexport const SIGN_OUT = 'SIGN_OUT';\n","export const OPEN_GENERATOR = 'OPEN_GENERATOR';\nexport const CLOSE_GENERATOR = 'CLOSE_GENERATOR';\n","import {\n  OPEN_GENERATOR,\n  CLOSE_GENERATOR\n} from './types';\n\nconst openGenerator = () => {\n  return {\n    type: OPEN_GENERATOR\n  }\n};\n\nconst closeGenerator = () => {\n  return {\n    type: CLOSE_GENERATOR\n  }\n};\n\nexport {\n  openGenerator,\n  closeGenerator\n};\n","class LocalStorage {\n  constructor() {\n    if (LocalStorage.instance) {\n      return LocalStorage.instance\n    }\n    LocalStorage.instance = this;\n    return this;\n  }\n\n  getItem(key) {\n    return JSON.parse(localStorage.getItem(`${key}`));\n  }\n\n  setItem(key, value) {\n    return localStorage.setItem(`${key}`, JSON.stringify(value));\n  }\n}\n\nexport default new LocalStorage();\n","import React from 'react';\nimport {openGenerator} from \"../../actions/generator/actions\";\nimport {connect} from \"react-redux\";\n\nclass FormButton extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      active: ''\n    }\n  }\n\n  selectButton = (e) => {\n    this.setState({\n      active: e.target.id\n    });\n\n    this.props.changeButton(e);\n  };\n\n  render() {\n    const { button } = this.props;\n\n    const selectIcon = (icon) => {\n      if (icon === 'open') {\n        return 'fa-lock'\n      } else if (icon === 'new') {\n        return 'fa-plus'\n      } else if (icon === 'generate') {\n        return 'fa-bolt'\n      }\n    };\n\n    return (\n      <>\n        <input id={button} type=\"radio\" value={button} name=\"category\"\n               onChange={this.selectButton} required\n        />\n        {\n          button === 'generate' ?\n            <label className=\"\" htmlFor={button} onClick={() => this.props.openGenerator()}>\n              <i className={`fa ${selectIcon(button)} open__icon-i`}> </i>\n              <div className=\"open__icon-text\">{button}</div>\n            </label>\n          :\n            <label className=\"\" htmlFor={button}>\n              <i className={`fa ${selectIcon(button)} open__icon-i`}> </i>\n              <div className=\"open__icon-text\">{button}</div>\n            </label>\n        }\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  openGenerator\n};\n\nexport default connect(null, mapDispatchToProps)(FormButton);\n","import React from 'react';\nimport { FormButton } from '../FormButton';\n\nexport default class FormButtons extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      button: ''\n    }\n  }\n\n  handleChange = (e) => {\n    const { onButtonChange } = this.props;\n    const button = e.target.value;\n    this.setState({ button });\n    onButtonChange(button);\n  };\n\n  render() {\n    const { buttons } = this.props;\n    return (\n      <div className=\"open__icons\">\n        {\n          buttons.map((button) => {\n            return (\n              <div className=\"open__icon open__icon-open\" key={button}>\n                <FormButton button={button} changeButton={this.handleChange} key={button}/>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInRequest, signInSuccess, signInError } from '../../actions/signin/actions';\nimport { openGenerator, closeGenerator } from '../../actions/generator/actions';\nimport { LocalStorageService }  from '../../services';\nimport './loginForm.css';\nimport {FormButtons} from \"../FormButtons\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      button: 'new',\n      password: '',\n      isPassword: false\n    }\n  }\n\n  onChange = ({ target }) => {\n    this.setState({\n      password: target.value\n    });\n  };\n\n  onButtonChange = (button) => {\n    this.setState({ button });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { password } = this.state;\n    const { signInRequest, signInSuccess } = this.props;\n\n    const { button } = this.state;\n\n    switch (button) {\n      case 'open':\n        console.log('open file')\n        break;\n      case 'new':\n        signInRequest();\n        signInSuccess(password);\n        LocalStorageService.setItem('userData', password);\n        console.log(password)\n        break;\n      case 'generate':\n        console.log('err file');\n        toast.error('Select the file or create', {\n          position: 'top-center',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n        break;\n\n      default:\n        console.log('default')\n    }\n  };\n\n  render() {\n    return (\n        <form className=\"open\" onSubmit={this.onSubmit}>\n          <FormButtons onButtonChange={this.onButtonChange} buttons={['open', 'new', 'generate']}/>\n          <div className=\"open__pass-area\">\n            <div className=\"open__pass-field-wrap\">\n              <input className=\"open__pass-input\" name=\"password\" type=\"password\" size=\"30\" autoComplete=\"new-password\"\n                     maxLength=\"1024\" placeholder=\"Enter password\" readOnly=\"\" tabIndex=\"23\" required\n                     onChange={this.onChange}\n              />\n              <button className=\"open__pass-enter-btn\" tabIndex=\"24\" type=\"submit\">\n                <i className=\"fa fa-level-down rotate-90 open__pass-enter-btn-icon-enter\"></i>\n                <i className=\"fa fa-fingerprint open__pass-enter-btn-icon-touch-id\"></i>\n              </button>\n            </div>\n          </div>\n          <ToastContainer\n            position='top-center'\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthorized: state.userData.isAuthorized,\n    loading: state.userData.loading,\n    error: state.userData.error\n  }\n};\n\nconst mapDispatchToProps = {\n  signInRequest,\n  signInSuccess,\n  signInError,\n  openGenerator,\n  closeGenerator\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import {\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILURE,\n  SIGN_OUT\n} from './types';\n\nconst signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  }\n};\n\nconst signInSuccess = (user) => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: user\n  }\n};\n\nconst signInError = (error) => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nconst userSignOut = () => {\n  return {\n    type: SIGN_OUT\n  }\n};\n\nexport {\n  signInRequest,\n  signInSuccess,\n  signInError,\n  userSignOut\n};\n","import React, { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport {\n  numbers,\n  upperCaseLetters,\n  lowerCaseLetters,\n  specialCharacters,\n} from '../../utils/characters';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { COPY_SUCCESS } from '../../utils/message';\nimport './Generator.css';\nimport {closeGenerator} from \"../../actions/generator/actions\";\nimport {connect} from \"react-redux\";\n\nconst Generator = ({ closeGenerator }) => {\n  const [password, setPassword] = useState('')\n  const [passwordLength, setPasswordLength] = useState(20)\n  const [includeUppercase, setIncludeUppercase] = useState(false)\n  const [includeLowercase, setIncludeLowercase] = useState(false)\n  const [includeNumbers, setIncludeNumbers] = useState(false)\n  const [includeSymbols, setIncludeSymbols] = useState(false)\n\n  const handleGeneratePassword = (e) => {\n    if (\n      !includeUppercase &&\n      !includeLowercase &&\n      !includeNumbers &&\n      !includeSymbols\n    ) {\n      notify('You must Select at least one option', true)\n    }\n    let characterList = ''\n\n    if (includeLowercase) {\n      characterList = characterList + lowerCaseLetters\n    }\n\n    if (includeUppercase) {\n      characterList = characterList + upperCaseLetters\n    }\n\n    if (includeNumbers) {\n      characterList = characterList + numbers\n    }\n\n    if (includeSymbols) {\n      characterList = characterList + specialCharacters\n    }\n\n    setPassword(createPassword(characterList))\n  }\n\n  const createPassword = (characterList) => {\n    let password = ''\n    const characterListLength = characterList.length\n\n    for (let i = 0; i < passwordLength; i++) {\n      const characterIndex = Math.round(Math.random() * characterListLength)\n      password = password + characterList.charAt(characterIndex)\n    }\n    return password\n  }\n\n  const copyToClipboard = () => {\n    const newTextArea = document.createElement('textarea')\n    newTextArea.innerText = password\n    document.body.appendChild(newTextArea)\n    newTextArea.select()\n    document.execCommand('copy')\n    newTextArea.remove()\n  }\n\n  const notify = (message, hasError = false) => {\n    if (hasError) {\n      toast.error(message, {\n        position: 'top-center',\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    } else {\n      toast.dark(message, {\n        position: 'top-center',\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n  }\n\n  const handleCopyPassword = (e) => {\n    if (password === '') {\n      notify('Nothing To Copy', true)\n    } else {\n      copyToClipboard()\n      notify(COPY_SUCCESS)\n    }\n  }\n\n  return (\n      <div className='container'>\n        <div className='generator'>\n          <div className=\"generator__close\" onClick={() => closeGenerator()}>X</div>\n          <h2 className='generator__header'>Password Generator</h2>\n          <div className='generator__password'>\n            <div>{password}</div>\n            <button onClick={handleCopyPassword} className='copy__btn'>\n              <i className='fa fa-clipboard'> </i>\n            </button>\n          </div>\n\n          <div className='form-group'>\n            <label htmlFor='password-strength'>Password length</label>\n            <input\n              defaultValue={passwordLength}\n              onChange={(e) => setPasswordLength(e.target.value)}\n              type='number'\n              id='password-strength'\n              name='password-strength'\n              max='20'\n              min='10'\n            />\n          </div>\n\n          <div className='form-group'>\n            <span>Include Uppercase Letters</span>\n            <input\n              checked={includeUppercase}\n              onChange={(e) => setIncludeUppercase(e.target.checked)}\n              type='checkbox'\n              id='uppercase-letters'\n              name='uppercase-letters'\n            />\n            <label htmlFor='uppercase-letters'> </label>\n          </div>\n\n          <div className='form-group'>\n            <span>Include Lowercase Letters</span>\n            <input\n              checked={includeLowercase}\n              onChange={(e) => setIncludeLowercase(e.target.checked)}\n              type='checkbox'\n              id='lowercase-letters'\n              name='lowercase-letters'\n            />\n            <label htmlFor='lowercase-letters'> </label>\n\n          </div>\n\n          <div className='form-group'>\n            <span>Include Numbers</span>\n            <input\n              checked={includeNumbers}\n              onChange={(e) => setIncludeNumbers(e.target.checked)}\n              type='checkbox'\n              id='include-numbers'\n              name='include-numbers'\n            />\n            <label htmlFor='include-numbers'> </label>\n          </div>\n\n          <div className='form-group'>\n            <span>Include Symbols</span>\n            <input\n              checked={includeSymbols}\n              onChange={(e) => setIncludeSymbols(e.target.checked)}\n              type='checkbox'\n              id='include-symbols'\n              name='include-symbols'\n            />\n            <label htmlFor='include-symbols'> </label>\n          </div>\n\n          <button onClick={handleGeneratePassword} className='generator__btn'>\n            Generate Password\n          </button>\n          <ToastContainer\n            position='top-center'\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </div>\n      </div>\n  )\n};\n\nconst mapDispatchToProps = {\n  closeGenerator\n};\n\nexport default connect(null, mapDispatchToProps)(Generator);\n","export const COPY_SUCCESS = 'Password successfully copied to clipboard';\n","export const numbers = '0123456789';\nexport const upperCaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport const lowerCaseLetters = 'abcdefghijklmnopqrstuvwxyz';\nexport const specialCharacters = \"!'^+%&/()=?_#$½§{[]}|;:>÷`<.*-@é\";\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './footer.css';\nimport {userSignOut} from \"../../actions/signin/actions\";\nimport {openGenerator} from \"../../actions/generator/actions\";\n\nconst Footer = ({userSignOut, openGenerator}) => {\n    return (\n      <div className=\"app__footer\">\n        <div className=\"footer\">\n          <div className=\"footer__btn footer__btn-generate\" id=\"footer__btn-generate\"\n               data-title=\"Generate\" onClick={() => openGenerator()}>\n            <i className=\"fa fa-bolt\"> </i>\n          </div>\n          <div className=\"footer__btn footer__btn-lock\" id=\"footer__btn-lock\"\n               data-title=\"Lock\" onClick={() => userSignOut()}>\n            <i className=\"fa fa-sign-out\"> </i>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nconst mapDispatchToProps = {\n  userSignOut,\n  openGenerator\n};\n\nexport default connect(null, mapDispatchToProps)(Footer);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { LoginForm } from '../LoginForm';\nimport {Generator} from \"../Generator\";\nimport {Footer} from \"../Footer\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  render() {\n    const { isAuthorized, isOpen } = this.props;\n    return (\n      <>\n        <div className=\"app__body\">\n          {isOpen ? <Generator/> : null}\n          {isAuthorized ? null : <LoginForm/>}\n        </div>\n        {isAuthorized ? <Footer/> : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthorized: state.userData.isAuthorized,\n    isOpen: state.generator.isOpen\n  }\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILURE,\n  SIGN_OUT\n} from '../actions/signin/types';\n// import { LocalStorageService } from '../services';\n\nconst initialState = {\n  password: null,\n  isAuthorized: false,\n  loading: false,\n  error: null\n};\n\nexport const userData = (state, action) => {\n  if (state === undefined) {\n    return initialState\n    // if (localStorage.userData) {\n    //   return {\n    //     user: LocalStorageService.getItem('userData'),\n    //     isAuthorized: true\n    //   }\n    // } else {\n    //   return initialState\n    // }\n  }\n\n  const { type, payload } = action;\n  switch (type) {\n    case SIGN_IN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        password: payload,\n        isAuthorized: true,\n        loading: false,\n        error: null\n      };\n    case SIGN_IN_FAILURE:\n      return {\n        ...initialState,\n        error: payload\n      };\n    case SIGN_OUT:\n      localStorage.clear();\n      return {\n        ...initialState\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  OPEN_GENERATOR,\n  CLOSE_GENERATOR\n} from '../actions/generator/types';\n\nconst initialState = {\n isOpen: false\n};\n\nexport const generator = (state, action) => {\n  if (state === undefined) { return initialState }\n\n  const { type } = action;\n  switch (type) {\n    case OPEN_GENERATOR:\n      return {\n        ...state,\n        isOpen: true\n      };\n    case CLOSE_GENERATOR:\n      return {\n        ...state,\n        isOpen: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { userData } from './authorization';\nimport { generator } from './generator';\n\nexport const reducer = combineReducers({\n  userData,\n  generator\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducers';\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n        <App />\n  </Provider>,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n"],"sourceRoot":""}